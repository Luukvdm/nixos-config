# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd = {
      availableKernelModules = ["nvme" "ehci_pci" "xhci_pci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc"];
      kernelModules = [];
    };
    kernelModules = ["kvm-amd"];
    extraModulePackages = [];
    postBootCommands = ''
      echo 2 > /sys/class/leds/tpacpi::kbd_backlight/brightness
    '';
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/c6eceb1e-163d-4686-aff1-cb8c60382892";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-3ac0072a-610f-4cb0-83df-bfa6080b524c" = {
    device = "/dev/disk/by-uuid/3ac0072a-610f-4cb0-83df-bfa6080b524c";
    # preOpenCommands = ''
    #   echo 2 > /sys/class/leds/tpacpi::kbd_backlight/brightness
    # '';
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/F5FC-B005";
    fsType = "vfat";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/3e00c025-d29f-42a9-b638-3553982ca85b";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
