# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot = {
    kernelModules = [ "kvm-amd" ];
    extraModulePackages = [ ];
    loader = {
      systemd-boot.enable = true;
      systemd-boot.configurationLimit = 10;
      efi.canTouchEfiVariables = true;
    };
    initrd = {
      availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
      kernelModules = [ "dm-snapshot" ];
      luks.devices = { "luks-3641d461-fef1-4e17-8856-62613a68ee9f".device = "/dev/disk/by-uuid/3641d461-fef1-4e17-8856-62613a68ee9f"; };
    };
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/6bc1bb02-27ee-4716-b9cc-f3027b5ef67b";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-cc2d823d-0ae5-4146-9cd8-ddb153318775".device = "/dev/disk/by-uuid/cc2d823d-0ae5-4146-9cd8-ddb153318775";


  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/F60C-3D7C";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
  [ { device = "/dev/disk/by-uuid/443c22b8-97a8-4d36-af08-e0dc3a9a20ba"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}

