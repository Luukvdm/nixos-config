# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot = {
    kernelModules = [ "kvm-amd" ];
    extraModulePackages = [ ];
    loader = {
      systemd-boot.enable = true;
      systemd-boot.configurationLimit = 10;
      efi.canTouchEfiVariables = true;
    };
    initrd = {
      availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
      kernelModules = [ ];
      luks.devices = {
        "luks-35d5d65e-d49b-4397-a078-8c3dcedd393f".device = "/dev/disk/by-uuid/35d5d65e-d49b-4397-a078-8c3dcedd393f";
      };
    };
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/9046e6bc-0930-4b18-bcab-a4c7c44af3cd";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-b4b45749-f33e-4f2f-a5fa-d1651fb56f24".device = "/dev/disk/by-uuid/b4b45749-f33e-4f2f-a5fa-d1651fb56f24";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/57D5-5895";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/d72c9d35-28d2-46e5-b79d-24f11d5fba4e"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
